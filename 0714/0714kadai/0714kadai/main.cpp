#include <stdio.h>
#include <string>
#include <random>
#include <math.h>

//int main()
//{
//	//第１問
//	//以下の計算に答えよ。
//	//1011 + 0101
//	//110100 + 11011
//	//1011 + 110011
//
//	int a;
//	int b;
//
//	a = 0b1011;
//	b = 0b0101;
//	a = a + b;
//	printf("%d\n",a);
//
//
//	a = 0b110100;
//	b = 0b11011;
//	a = a + b;
//	printf("%d\n",a);
//
//
//	a = 0b1011;
//	b = 0b110011;
//	a = a + b;
//	printf("%d\n", a);
//}


//int main()
//{
//	//第２問
//	//以下の計算に答えよ。
//	//FF + FF
//	//ed + 10
//	//563 + cd
//
//	int a;
//	int b;
//
//	a = 0xff;
//	b = 0xff;
//	a = a + b;
//	printf("%d\n", a);
//
//
//	a = 0xed;
//	b = 0x10;
//	a = a + b;
//	printf("%d\n", a);
//
//
//	a = 0x563;
//	b = 0xcd;
//	a = a + b;
//	printf("%d\n", a);
//}


	//第3問
	//cahr,int,float,doubleのサイズをそれぞれ答えよ
	// 
	//charは1バイト
	//intは4バイト
	//floatは4バイト
	//doubleは8バイト

	//第4問
	//int judge = true;
	//if (judge)
	//{
	//	①
	//}
	//else
	//{
	//	②
	//}
	//①と②どちらが処理されるか答えよ。
	//judgeが真なので①が処理される



	//第5問
	//for( int i = 0; i < 100; i = i + 3)
	//{
	//	①
	//}
	//①の処理が何回実行されるか答えよ。
	//A.100/3=33　よって33回実行する


	//第6問
	//int i = 0;
	//while (i < 100)
	//{
	//	i = i + 5;
	//	①
	//}
	//①の処理は何回実行されるか答えよ。
	//A.100/5=20 よって20回実行する


	//第7問
	//int array[4][5];
	//上記配列のサイズはいくつか答えよ。
	//A.1つ4ビットの入れ物が4*5で20個あるから80バイト
	
	 
	
//第８問
//int array[5][20]
//for (int i = 0; i < 5; ++i)
//{
//	for (int j = 0; j < ①; ++j)
//	{
//		array[i][j] = i * ① + j;
//	}
//}
//①には何という数字が入るか答えよ。
//①には20が入る


//第９問
//① testFunc(int a)
//{
//	return;
//}
//①にはint, float, voidのどれが正しいか答えよ。
//intが正しい



//第１０問
//２点間の距離を求める関数を作成してください。
//int main()
//{
//	int a;	//開始点
//	int b;	//終了点
//	int p;	//距離
//
//	p = b - a;
//}


 
//問11は解けなかったです。
//第１１問
//カード構造体を作成してください。
//このカードはトランプのカードのことです。
//情報として、なんのカードなのかを持っていてください。
//スペードの7である、ハートの13であるなど。
//この構造体には現在の自分の情報を設定する処理と、
//現在の自分の情報を開示する処理を作ってください。
//
//
//トランプの山札の構造体を作成してください。
//その際カードには先ほど作った構造体を使用してください。
//以下の条件を満たしておくこと。
//トランプの枚数は53枚(1 ～ 13 * 4 + ジョーカー1)
//Card card[53];
//
//シャッフル機能を実装する。
//card[53]にランダムにカード情報を付与してください。
//card[0]がクラブの6、card[1]がハートの5といったように。
//その際同じカードは存在しないようにしてください。
